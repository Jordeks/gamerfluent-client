[{"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/App.js":"1","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/containers/TopUsers.js":"2","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/containers/NewsContainer.js":"3","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/NewsCard.js":"4","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/Features.js":"5","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/containers/DashContent.js":"6","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/containers/PostContainer.js":"7","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/PostCard.js":"8","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/ProfileSideBar.js":"9","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/Modal.js":"10","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/index.js":"11","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/Header.js":"12","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/Footer.js":"13","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/UserCard.js":"14","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/containers/NewsFeed.js":"15"},{"size":522,"mtime":1609197896362,"results":"16","hashOfConfig":"17"},{"size":314,"mtime":1608839692467,"results":"18","hashOfConfig":"17"},{"size":781,"mtime":1609459573582,"results":"19","hashOfConfig":"17"},{"size":458,"mtime":1609276083511,"results":"20","hashOfConfig":"17"},{"size":1430,"mtime":1608682596154,"results":"21","hashOfConfig":"17"},{"size":665,"mtime":1609455907041,"results":"22","hashOfConfig":"17"},{"size":4942,"mtime":1609963630387,"results":"23","hashOfConfig":"17"},{"size":834,"mtime":1609528325061,"results":"24","hashOfConfig":"17"},{"size":1215,"mtime":1609272417934,"results":"25","hashOfConfig":"17"},{"size":2207,"mtime":1609460080051,"results":"26","hashOfConfig":"17"},{"size":500,"mtime":1608397733724,"results":"27","hashOfConfig":"17"},{"size":517,"mtime":1609197896363,"results":"28","hashOfConfig":"17"},{"size":118,"mtime":1608839985108,"results":"29","hashOfConfig":"17"},{"size":108,"mtime":1608839522293,"results":"30","hashOfConfig":"17"},{"size":408,"mtime":1608745331692,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1hc17zb",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/App.js",[],["66","67"],"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/containers/TopUsers.js",[],["68","69"],"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/containers/NewsContainer.js",[],"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/NewsCard.js",[],["70","71"],"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/Features.js",[],"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/containers/DashContent.js",[],"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/containers/PostContainer.js",["72","73"],"import React, { useState } from 'react'\nimport PostCard from '../components/PostCard'\nimport Modal from '../components/Modal'\nimport sprite from '../imgs/sprite.svg'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { getBlogs } from '../services/blog'\n\n// will iterate through current users blogs \n\nconst PostContainer = () => {\n    \n    const [blogs, setBlogs] = useState([])\n    const [modal, setModal] = useState(false)\n    const [form, setForm] = useState(\n                            {\n                                id: null,\n                                title: '',\n                                content: '',\n                            })\n\n    const toggleModal = () => setModal( !modal )\n\n    const openNewModal = () => {setModal({\n        modal: true, \n        })\n        setForm({\n            title: '',\n            content: '', \n        })\n    }\n\n    const handleOnDragEnd = (result) => {\n        // const items = Array.from(blogs);\n        // const [reorderedItem] = items.splice(result.source.index, 1);\n        // items.splice(result.destination.index, 0, reorderedItem);\n\n      }\n\n    return (\n        <div>\n            <DragDropContext onDragEnd={ handleOnDragEnd }>\n                <Droppable droppableId='cards'>\n                        {(provided) => (\n                    <div className='dashboard__posts'  {...provided.droppableProps} ref={provided.innerRef}>\n                        <button className='button' onClick={ openNewModal }>\n                            <svg className='icon icon--light'>\n                                <use href={sprite + '#icon-plus'} />\n                            </svg>\n                            <span className='button__text'>Add A Post</span>\n                        </button>\n                        \n                            <div className='cards'>\n                                { blogs.map((blog, index) => <PostCard key={blog.id} {...blog} index={index}/> )}\n                            </div>\n                        {provided.placeholder}\n                    </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n            <Modal toggle={ toggleModal } {...form} display={ modal } />\n        </div>\n    )\n}\n\nexport default PostContainer\n\n\n\n// export default class PostContainer extends Component {\n\n    \n\n//     state = {\n//         blogs: [], \n//         updateBlogs: [],\n//         modal: false, \n//         form: {\n//             id: null,\n//             title: '',\n//             content: '',\n//         } ,\n//     }\n\n//     componentDidMount(){\n//         fetch('http://localhost:3000/api/v1/blogs')\n//             .then(response => response.json())\n//             .then(data => this.setState({blogs: data}));\n//     }\n\n//     addBlog = (blog) => {\n//         fetch(`http://localhost:3000/blogs`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(blog),\n//         })\n//         .then(response => response.json())\n//         .then(newBlog => this.setState({blogs: [...this.state.blogs, newBlog]}))\n//       }\n\n//       toggleModal = () => this.setState({modal: !this.state.modal})\n\n//       openNewModal = () => {this.setState({\n//         modal: true, \n//         form: {\n//             title: '',\n//             content: '', \n//         }\n//     })\n//   }\n\n    //    handleOnDragEnd = (result) => {\n    //     const items = Array.from(this.state.blogs);\n    //     const [reorderedItem] = items.splice(result.source.index, 1);\n    //     items.splice(result.destination.index, 0, reorderedItem);\n\n    //   }\n\n//     render() {\n//         return (\n            // <>\n            //     <DragDropContext onDragEnd={this.handleOnDragEnd}>\n            //     <Droppable droppableId='cards'>\n            //             {(provided) => (\n            //         <div className='dashboard__posts'  {...provided.droppableProps} ref={provided.innerRef}>\n            //             <button className='button' onClick={ this.openNewModal }>\n            //                 <svg className='icon icon--light'>\n            //                     <use href={sprite + '#icon-plus'} />\n            //                 </svg>\n            //                 <span className='button__text'>Add A Post</span>\n            //             </button>\n                        \n            //                 <div className='cards'>\n            //                     { this.state.blogs.map((blog, index) => <PostCard key={blog.id} {...blog} index={index}/> )}\n            //                 </div>\n            //             {provided.placeholder}\n            //         </div>\n            //         )}\n            //     </Droppable>\n            //     </DragDropContext>\n            // <Modal toggle={this.toggleModal} {...this.state.form} display={this.state.modal} />\n            // </>\n//             )\n//     }\n// }\n","/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/PostCard.js",[],"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/ProfileSideBar.js",[],"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/Modal.js",[],"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/index.js",[],"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/Header.js",[],"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/Footer.js",[],"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/components/UserCard.js",[],"/Users/jordanromero/Development/code/postgrad/gamerfluent/gamerfluent-client/src/containers/NewsFeed.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"74","replacedBy":"80"},{"ruleId":"76","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":6,"column":10,"nodeType":"84","messageId":"85","endLine":6,"endColumn":18},{"ruleId":"82","severity":1,"message":"86","line":12,"column":19,"nodeType":"84","messageId":"85","endLine":12,"endColumn":27},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],["87"],["88"],["87"],["88"],"no-unused-vars","'getBlogs' is defined but never used.","Identifier","unusedVar","'setBlogs' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]