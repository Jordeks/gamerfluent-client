[{"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/App.js":"1","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/containers/Home.js":"2","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/Header.js":"3","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/Footer.js":"4","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/containers/PostContainer.js":"5","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/containers/Dashboard.js":"6","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/Features.js":"7","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/containers/NewsFeed.js":"8","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/containers/TopUsers.js":"9","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/ProfileSideBar.js":"10","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/NewsCard.js":"11","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/Modal.js":"12","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/containers/NewsContainer.js":"13","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/PostCard.js":"14","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/Signup.js":"15","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/services/news.js":"16","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/Login.js":"17","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/services/user.js":"18"},{"size":973,"mtime":1611245846954,"results":"19","hashOfConfig":"20"},{"size":406,"mtime":1609184776412,"results":"21","hashOfConfig":"20"},{"size":648,"mtime":1611171912477,"results":"22","hashOfConfig":"20"},{"size":118,"mtime":1609184776411,"results":"23","hashOfConfig":"20"},{"size":5137,"mtime":1611169700082,"results":"24","hashOfConfig":"20"},{"size":281,"mtime":1609258263371,"results":"25","hashOfConfig":"20"},{"size":1430,"mtime":1609184776411,"results":"26","hashOfConfig":"20"},{"size":408,"mtime":1609184776413,"results":"27","hashOfConfig":"20"},{"size":314,"mtime":1609184776413,"results":"28","hashOfConfig":"20"},{"size":1215,"mtime":1609263545111,"results":"29","hashOfConfig":"20"},{"size":458,"mtime":1611169700081,"results":"30","hashOfConfig":"20"},{"size":2207,"mtime":1611169700081,"results":"31","hashOfConfig":"20"},{"size":1510,"mtime":1611169700082,"results":"32","hashOfConfig":"20"},{"size":834,"mtime":1611169700081,"results":"33","hashOfConfig":"20"},{"size":716,"mtime":1611172373055,"results":"34","hashOfConfig":"20"},{"size":143,"mtime":1611169700085,"results":"35","hashOfConfig":"20"},{"size":961,"mtime":1611245835925,"results":"36","hashOfConfig":"20"},{"size":473,"mtime":1611245929679,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"1l798sx",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/App.js",["78"],"import { BrowserRouter as Router, Route, Switch, useHistory} from 'react-router-dom';\nimport React, { useState, useEffect } from 'react'\nimport Home from './containers/Home'\nimport Dashboard from './containers/Dashboard'\nimport Login from './components/Login'\nimport Signup from './components/Signup'\n\n\nconst App = () => {\n  const [user, setUser] = useState({})\n\n  const handleLogin = (user) => {\n    setUser(user)\n  }\nconsole.log(user)\n  const history = useHistory();\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch >\n          <Route exact path=\"/dashboard\" component={ Dashboard } history={history}/>\n          <Route exact path='/login' render={(props) => <Login {...props} handleLogin={ handleLogin } history={history}/>} />\n          <Route exact path=\"/signup\" component= { Signup } history={history}/>\n          <Route exact path=\"/\" component={ Home } history={history}/>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/containers/Home.js",[],["79","80"],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/Header.js",[],["81","82"],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/Footer.js",[],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/containers/PostContainer.js",["83"],"import React, { useState, useEffect } from 'react'\nimport PostCard from '../components/PostCard'\nimport Modal from '../components/Modal'\nimport sprite from '../imgs/sprite.svg'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { getBlogs } from '../services/blog'\n\n// will iterate through current users blogs \n\nconst PostContainer = () => {\n    \n    const [blogs, setBlogs] = useState([])\n    const [blogsDnd, updateBlogs] = useState(blogs)\n    const [modal, setModal] = useState(false)\n    const [form, setForm] = useState(\n                            {\n                                id: null,\n                                title: '',\n                                content: '',\n                            })\n\n    useEffect(() => {\n        getBlogs()\n        .then(data => {\n                setBlogs(data)\n        })\n    })\n\n    const toggleModal = () => setModal( !modal )\n\n    const openNewModal = () => {setModal({\n        modal: true, \n        })\n        setForm({\n            title: '',\n            content: '', \n        })\n    }\n\n    const handleOnDragEnd = (result) => {\n        const items = Array.from(blogs);\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n\n        updateBlogs(items)\n      }\n\n    return (\n        <div>\n            <DragDropContext onDragEnd={ handleOnDragEnd }>\n                <Droppable droppableId='cards'>\n                        {(provided) => (\n                    <div className='dashboard__posts'  {...provided.droppableProps} ref={provided.innerRef}>\n                        <button className='button' onClick={ openNewModal }>\n                            <svg className='icon icon--light'>\n                                <use href={sprite + '#icon-plus'} />\n                            </svg>\n                            <span className='button__text'>Add A Post</span>\n                        </button>\n                        \n                            <div className='cards'>\n                                {blogs.map((blog, index) => <PostCard key={blog.id} {...blog} index={index}/> )}\n                            </div>\n                        {provided.placeholder}\n                    </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n            <Modal toggle={ toggleModal } {...form} display={ modal } />\n        </div>\n    )\n}\n\nexport default PostContainer\n\n\n\n// export default class PostContainer extends Component {\n\n    \n\n//     state = {\n//         blogs: [], \n//         updateBlogs: [],\n//         modal: false, \n//         form: {\n//             id: null,\n//             title: '',\n//             content: '',\n//         } ,\n//     }\n\n//     componentDidMount(){\n//         fetch('http://localhost:3000/api/v1/blogs')\n//             .then(response => response.json())\n//             .then(data => this.setState({blogs: data}));\n//     }\n\n//     addBlog = (blog) => {\n//         fetch(`http://localhost:3000/blogs`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(blog),\n//         })\n//         .then(response => response.json())\n//         .then(newBlog => this.setState({blogs: [...this.state.blogs, newBlog]}))\n//       }\n\n//       toggleModal = () => this.setState({modal: !this.state.modal})\n\n//       openNewModal = () => {this.setState({\n//         modal: true, \n//         form: {\n//             title: '',\n//             content: '', \n//         }\n//     })\n//   }\n\n    //    handleOnDragEnd = (result) => {\n    //     const items = Array.from(this.state.blogs);\n    //     const [reorderedItem] = items.splice(result.source.index, 1);\n    //     items.splice(result.destination.index, 0, reorderedItem);\n\n    //   }\n\n//     render() {\n//         return (\n            // <>\n            //     <DragDropContext onDragEnd={this.handleOnDragEnd}>\n            //     <Droppable droppableId='cards'>\n            //             {(provided) => (\n            //         <div className='dashboard__posts'  {...provided.droppableProps} ref={provided.innerRef}>\n            //             <button className='button' onClick={ this.openNewModal }>\n            //                 <svg className='icon icon--light'>\n            //                     <use href={sprite + '#icon-plus'} />\n            //                 </svg>\n            //                 <span className='button__text'>Add A Post</span>\n            //             </button>\n                        \n            //                 <div className='cards'>\n            //                     { this.state.blogs.map((blog, index) => <PostCard key={blog.id} {...blog} index={index}/> )}\n            //                 </div>\n            //             {provided.placeholder}\n            //         </div>\n            //         )}\n            //     </Droppable>\n            //     </DragDropContext>\n            // <Modal toggle={this.toggleModal} {...this.state.form} display={this.state.modal} />\n            // </>\n//             )\n//     }\n// }\n","/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/containers/Dashboard.js",[],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/Features.js",[],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/containers/NewsFeed.js",[],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/containers/TopUsers.js",[],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/ProfileSideBar.js",[],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/NewsCard.js",[],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/Modal.js",[],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/containers/NewsContainer.js",[],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/PostCard.js",[],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/Signup.js",[],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/services/news.js",[],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/components/Login.js",[],"/Users/meganmcclure/Flatiron/practice-react/gamerfluent/gamerfluent-client/src/services/user.js",[],{"ruleId":"84","severity":1,"message":"85","line":2,"column":27,"nodeType":"86","messageId":"87","endLine":2,"endColumn":36},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"84","severity":1,"message":"94","line":13,"column":12,"nodeType":"86","messageId":"87","endLine":13,"endColumn":20},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["95"],"no-negated-in-lhs",["96"],["95"],["96"],"'blogsDnd' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]